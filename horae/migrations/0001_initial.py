# Generated by Django 2.1 on 2018-08-20 07:16

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OrderdSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.IntegerField(db_index=True, default=0)),
                ('run_time', models.CharField(db_index=True, max_length=20)),
                ('status', models.IntegerField(default=0)),
                ('pl_id', models.IntegerField(db_index=True, default=0)),
                ('end_time', models.DateTimeField(default='2000-01-01 00:00:00', null=True, verbose_name='task terminate time')),
                ('start_time', models.DateTimeField(default='2000-01-01 00:00:00', verbose_name='task start time')),
                ('init_time', models.DateTimeField(default='2000-01-01 00:00:00', null=True, verbose_name='task called time')),
                ('ordered_id', models.CharField(db_index=True, max_length=255)),
                ('run_tag', models.IntegerField(db_index=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Pipeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('owner_id', models.IntegerField(db_index=True, default=0)),
                ('ct_time', models.CharField(max_length=250)),
                ('update_time', models.DateTimeField(verbose_name='date published')),
                ('enable', models.IntegerField(db_index=True, default=0)),
                ('type', models.IntegerField(db_index=True, default=0)),
                ('email_to', models.CharField(default='', max_length=1024, null=True)),
                ('description', models.CharField(max_length=1024, null=True)),
                ('sms_to', models.CharField(max_length=1024, null=True)),
                ('tag', models.CharField(default='', max_length=1024, null=True)),
                ('life_cycle', models.CharField(max_length=50)),
                ('monitor_way', models.IntegerField(default=0)),
                ('private', models.IntegerField(default=0)),
                ('project_id', models.IntegerField(db_index=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('type', models.IntegerField(db_index=True, default=0)),
                ('template', models.TextField(null=True)),
                ('update_time', models.DateTimeField(verbose_name='update_time')),
                ('description', models.CharField(max_length=1024)),
                ('config', models.TextField(null=True)),
                ('owner_id', models.IntegerField(db_index=True, default=0)),
                ('private', models.IntegerField(db_index=True, default=0, null=True)),
                ('ap', models.IntegerField(db_index=True, default=0, null=True)),
                ('tag', models.CharField(max_length=1024, null=True)),
                ('tpl_files', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('owner_id', models.IntegerField(db_index=True, default=0)),
                ('is_default', models.IntegerField(default=0)),
                ('description', models.CharField(default='', max_length=10240, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReadyTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pl_id', models.IntegerField(db_index=True, default=0)),
                ('schedule_id', models.IntegerField(db_index=True, default=0)),
                ('status', models.IntegerField(default=0)),
                ('update_time', models.DateTimeField(null=True, verbose_name='date published')),
                ('type', models.IntegerField(default=0)),
                ('init_time', models.DateTimeField(null=True, verbose_name='task called time')),
                ('retry_count', models.IntegerField(default=0, null=True)),
                ('retried_count', models.IntegerField(default=0, null=True)),
                ('run_time', models.CharField(db_index=True, max_length=20)),
                ('server_tag', models.CharField(max_length=50, null=True)),
                ('task_id', models.IntegerField(db_index=True, default=0)),
                ('pid', models.IntegerField(db_index=True, default=0)),
                ('owner_id', models.IntegerField(db_index=True, default=0)),
                ('run_server', models.CharField(default='', max_length=20, null=True)),
                ('task_handler', models.CharField(default='', max_length=4096, null=True)),
                ('is_trigger', models.IntegerField(default=0)),
                ('next_task_ids', models.CharField(default=',', max_length=200, null=True)),
                ('prev_task_ids', models.CharField(default=',', max_length=200, null=True)),
                ('work_dir', models.CharField(default='', max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RunHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.IntegerField(db_index=True, default=0)),
                ('run_time', models.CharField(db_index=True, max_length=20)),
                ('pl_id', models.IntegerField(db_index=True, default=0)),
                ('start_time', models.DateTimeField(default='2000-01-01 00:00:00', null=True, verbose_name='task start time')),
                ('end_time', models.DateTimeField(default='2000-01-01 00:00:00', null=True, verbose_name='task terminate time')),
                ('status', models.IntegerField(db_index=True, default=0)),
                ('schedule_id', models.IntegerField(db_index=True, default=0)),
                ('tag', models.IntegerField(default=0, null=True)),
                ('type', models.IntegerField(default=0)),
                ('task_handler', models.CharField(max_length=4096, null=True)),
                ('run_server', models.CharField(max_length=20, null=True)),
                ('server_tag', models.CharField(default='ALL', max_length=50)),
                ('pl_name', models.CharField(max_length=1024)),
                ('task_name', models.CharField(max_length=1024)),
                ('cpu', models.IntegerField(default=0, null=True)),
                ('mem', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.IntegerField(db_index=True, default=0)),
                ('run_time', models.CharField(db_index=True, max_length=20)),
                ('status', models.IntegerField(default=0)),
                ('pl_id', models.IntegerField(db_index=True, default=0)),
                ('end_time', models.DateTimeField(default='2000-01-01 00:00:00', null=True, verbose_name='task terminate time')),
                ('start_time', models.DateTimeField(default='2000-01-01 00:00:00', verbose_name='task start time')),
                ('init_time', models.DateTimeField(default='2000-01-01 00:00:00', null=True, verbose_name='task called time')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pl_id', models.IntegerField(db_index=True, default=0)),
                ('pid', models.IntegerField(db_index=True, default=0)),
                ('next_task_ids', models.CharField(default=',', max_length=10240, null=True)),
                ('prev_task_ids', models.CharField(default=',', max_length=1024, null=True)),
                ('over_time', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=250)),
                ('config', models.TextField(null=True)),
                ('retry_count', models.IntegerField(default=0, null=True)),
                ('last_run_time', models.CharField(max_length=50, null=True)),
                ('priority', models.IntegerField(default=6)),
                ('except_ret', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=1024, null=True)),
                ('server_tag', models.CharField(default='ALL', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UploadHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processor_id', models.IntegerField(db_index=True, default=0)),
                ('status', models.IntegerField(default=0)),
                ('update_time', models.DateTimeField(null=True, verbose_name='date published')),
                ('upload_time', models.DateTimeField(null=True, verbose_name='date published')),
                ('upload_user_id', models.IntegerField(db_index=True, default=0)),
                ('version', models.CharField(max_length=250, unique=True)),
                ('description', models.CharField(default='', max_length=1024, null=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='schedule',
            unique_together={('task_id', 'run_time')},
        ),
        migrations.AlterUniqueTogether(
            name='runhistory',
            unique_together={('task_id', 'run_time')},
        ),
        migrations.AlterUniqueTogether(
            name='readytask',
            unique_together={('task_id', 'run_time', 'schedule_id', 'is_trigger')},
        ),
        migrations.AlterUniqueTogether(
            name='orderdschedule',
            unique_together={('task_id', 'run_time')},
        ),
    ]
